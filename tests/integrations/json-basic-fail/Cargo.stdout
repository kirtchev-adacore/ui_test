
running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished 

{ "type": "test", "event": "started", "name": "tests/actual_tests/bad_pattern.rs" }
{ "type": "test", "event": "started", "name": "tests/actual_tests/executable.rs" }
{ "type": "test", "event": "started", "name": "tests/actual_tests/executable_compile_err.rs" }
{ "type": "test", "event": "started", "name": "tests/actual_tests/exit_code_fail.rs" }
{ "type": "test", "event": "started", "name": "tests/actual_tests/filters.rs" }
{ "type": "test", "event": "started", "name": "tests/actual_tests/foomp.rs" }
{ "type": "test", "event": "started", "name": "tests/actual_tests/foomp2.rs" }
{ "type": "test", "event": "started", "name": "tests/actual_tests/ice_annotations.rs" }
{ "type": "test", "event": "started", "name": "tests/actual_tests/inline_chain.rs" }
{ "type": "test", "event": "started", "name": "tests/actual_tests/joined_wrong_order.rs" }
{ "type": "test", "event": "started", "name": "tests/actual_tests/lone_joined_pattern.rs" }
{ "type": "test", "event": "started", "name": "tests/actual_tests/pattern_too_many_arrow.rs" }
{ "type": "test", "event": "started", "name": "tests/actual_tests/pattern_too_many_arrow_above.rs" }
{ "type": "test", "event": "started", "name": "tests/actual_tests/rustc_ice.rs" }
{ "type": "test", "event": "started", "name": "tests/actual_tests/touching_above_below.rs" }
{ "type": "test", "event": "started", "name": "tests/actual_tests/touching_above_below_chain.rs" }
{ "type": "test", "event": "ok", "name": "tests/actual_tests/bad_pattern.rs" }
{ "type": "test", "event": "failed", "name": "tests/actual_tests/bad_pattern.rs", "stdout": "---- command\n\n\"rustc\" \"--error-format=json\" \"--out-dir\" \"$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/0/tests/actual_tests\" \"tests/actual_tests/bad_pattern.rs\" \"--extern\" \"json_basic_fail=$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug/libjson_basic_fail.rlib\" \"--extern\" \"json_basic_fail=$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug/libjson_basic_fail-$HASH.rmeta\" \"-L\" \"$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug\" \"-L\" \"$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug\" \"--edition\" \"2021\"\n\n\---- stdout\n\n\\n\n---- stderr\n\n\error[E0308]: mismatched types\n --> tests/actual_tests/bad_pattern.rs:4:9\n  |\n4 |     add(\"42\", 3);\n  |     --- ^^^^ expected `usize`, found `&str`\n  |     |\n  |     arguments to this function are incorrect\n  |\nnote: function defined here\n --> $DIR/tests/integrations/json-basic-fail/src/lib.rs:LL:CC\n  |\n1 | pub fn add(left: usize, right: usize) -> usize {\n  |        ^^^\n\nerror: aborting due to 1 previous error\n\nFor more information about this error, try `rustc --explain E0308`.\n" }
{ "type": "test", "event": "ok", "name": "tests/actual_tests/executable.rs" }
{ "type": "test", "event": "ok", "name": "tests/actual_tests/executable.rs" }
{ "type": "test", "event": "failed", "name": "tests/actual_tests/executable_compile_err.rs", "stdout": "---- command\n\n\"rustc\" \"--error-format=json\" \"--out-dir\" \"$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/0/tests/actual_tests\" \"tests/actual_tests/executable_compile_err.rs\" \"--extern\" \"json_basic_fail=$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug/libjson_basic_fail.rlib\" \"--extern\" \"json_basic_fail=$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug/libjson_basic_fail-$HASH.rmeta\" \"-L\" \"$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug\" \"-L\" \"$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug\" \"--edition\" \"2021\"\n\n\---- stdout\n\n\\n\n---- stderr\n\n\error: this file contains an unclosed delimiter\n --> tests/actual_tests/executable_compile_err.rs:4:2\n  |\n3 | fn main() {\n  |           - unclosed delimiter\n4 |\n  |  ^\n\nerror: aborting due to 1 previous error\n\n" }
{ "type": "test", "event": "failed", "name": "tests/actual_tests/exit_code_fail.rs", "stdout": "---- command\n\n\"rustc\" \"--error-format=json\" \"--out-dir\" \"$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/0/tests/actual_tests\" \"tests/actual_tests/exit_code_fail.rs\" \"--extern\" \"json_basic_fail=$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug/libjson_basic_fail.rlib\" \"--extern\" \"json_basic_fail=$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug/libjson_basic_fail-$HASH.rmeta\" \"-L\" \"$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug\" \"-L\" \"$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug\" \"--edition\" \"2021\"\n\n\---- stdout\n\n\\n\n---- stderr\n\n\" }
{ "type": "test", "event": "failed", "name": "tests/actual_tests/filters.rs", "stdout": "---- command\n\nparse comments\n\n\---- stdout\n\n\\n\n---- stderr\n\n\" }
{ "type": "test", "event": "ok", "name": "tests/actual_tests/foomp.rs" }
{ "type": "test", "event": "ok", "name": "tests/actual_tests/foomp2.rs" }
{ "type": "test", "event": "failed", "name": "tests/actual_tests/ice_annotations.rs", "stdout": "---- command\n\nRUSTC_BOOTSTRAP=\"1\" RUSTC_ICE=\"0\" \"rustc\" \"--error-format=json\" \"--out-dir\" \"$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/0/tests/actual_tests\" \"tests/actual_tests/ice_annotations.rs\" \"-Ztreat-err-as-bug\" \"--extern\" \"json_basic_fail=$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug/libjson_basic_fail.rlib\" \"--extern\" \"json_basic_fail=$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug/libjson_basic_fail-$HASH.rmeta\" \"-L\" \"$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug\" \"-L\" \"$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug\" \"--edition\" \"2021\"\n\n\---- stdout\n\n\\n\n---- stderr\n\n\error: internal compiler error[E0308]: mismatched types\n --> tests/actual_tests/ice_annotations.rs:8:9\n  |\n8 |     add(\"42\", 3);\n  |     --- ^^^^ expected `usize`, found `&str`\n  |     |\n  |     arguments to this function are incorrect\n  |\nnote: function defined here\n --> $DIR/tests/integrations/json-basic-fail/src/lib.rs:LL:CC\n  |\n1 | pub fn add(left: usize, right: usize) -> usize {\n  |        ^^^\n\nthread 'rustc' panicked at compiler/rustc_errors/src/lib.rs:\naborting due to `-Z treat-err-as-bug=1`\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\n\n
{ "type": "test", "event": "failed", "name": "tests/actual_tests/inline_chain.rs", "stdout": "---- command\n\nparse comments\n\n\---- stdout\n\n\\n\n---- stderr\n\n\" }
{ "type": "test", "event": "failed", "name": "tests/actual_tests/joined_wrong_order.rs", "stdout": "---- command\n\nparse comments\n\n\---- stdout\n\n\\n\n---- stderr\n\n\" }
{ "type": "test", "event": "failed", "name": "tests/actual_tests/lone_joined_pattern.rs", "stdout": "---- command\n\nparse comments\n\n\---- stdout\n\n\\n\n---- stderr\n\n\" }
{ "type": "test", "event": "failed", "name": "tests/actual_tests/pattern_too_many_arrow.rs", "stdout": "---- command\n\nparse comments\n\n\---- stdout\n\n\\n\n---- stderr\n\n\" }
{ "type": "test", "event": "failed", "name": "tests/actual_tests/pattern_too_many_arrow_above.rs", "stdout": "---- command\n\nparse comments\n\n\---- stdout\n\n\\n\n---- stderr\n\n\" }
{ "type": "test", "event": "failed", "name": "tests/actual_tests/rustc_ice.rs", "stdout": "---- command\n\nRUSTC_BOOTSTRAP=\"1\" RUSTC_ICE=\"0\" \"rustc\" \"--error-format=json\" \"--out-dir\" \"$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/0/tests/actual_tests\" \"tests/actual_tests/rustc_ice.rs\" \"-Ztreat-err-as-bug\" \"--extern\" \"json_basic_fail=$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug/libjson_basic_fail.rlib\" \"--extern\" \"json_basic_fail=$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug/libjson_basic_fail-$HASH.rmeta\" \"-L\" \"$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug\" \"-L\" \"$DIR/tests/integrations/json-basic-fail/../../../target/$TMP/$TRIPLE/debug\" \"--edition\" \"2021\"\n\n\---- stdout\n\n\\n\n---- stderr\n\n\error: internal compiler error[E0308]: mismatched types\n --> tests/actual_tests/rustc_ice.rs:8:9\n  |\n8 |     add(\"42\", 3);\n  |     --- ^^^^ expected `usize`, found `&str`\n  |     |\n  |     arguments to this function are incorrect\n  |\nnote: function defined here\n --> $DIR/tests/integrations/json-basic-fail/src/lib.rs:LL:CC\n  |\n1 | pub fn add(left: usize, right: usize) -> usize {\n  |        ^^^\n\nthread 'rustc' panicked at compiler/rustc_errors/src/lib.rs:\naborting due to `-Z treat-err-as-bug=1`\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\n\n
{ "type": "test", "event": "failed", "name": "tests/actual_tests/touching_above_below.rs", "stdout": "---- command\n\nparse comments\n\n\---- stdout\n\n\\n\n---- stderr\n\n\" }
{ "type": "test", "event": "failed", "name": "tests/actual_tests/touching_above_below_chain.rs", "stdout": "---- command\n\nparse comments\n\n\---- stdout\n\n\\n\n---- stderr\n\n\" }
{ "type": "suite", "event": "failed", "passed": 4, "failed": 13, "ignored": 0, "measured": 0, "filtered_out": 0 }

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished 

